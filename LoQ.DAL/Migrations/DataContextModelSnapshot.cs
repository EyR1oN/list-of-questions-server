// <auto-generated />
using LoQ.DAL.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoQ.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoQ.DAL.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCorrect = true,
                            Name = "Answer 1",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 2,
                            IsCorrect = false,
                            Name = "Answer 2",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsCorrect = false,
                            Name = "Answer 3",
                            QuestionId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsCorrect = true,
                            Name = "Answer 1",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 5,
                            IsCorrect = false,
                            Name = "Answer 2",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 6,
                            IsCorrect = false,
                            Name = "Answer 3",
                            QuestionId = 2
                        },
                        new
                        {
                            Id = 7,
                            IsCorrect = true,
                            Name = "Answer 1",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 8,
                            IsCorrect = false,
                            Name = "Answer 2",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 9,
                            IsCorrect = false,
                            Name = "Answer 3",
                            QuestionId = 3
                        },
                        new
                        {
                            Id = 10,
                            IsCorrect = true,
                            Name = "Answer 1",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 11,
                            IsCorrect = false,
                            Name = "Answer 2",
                            QuestionId = 4
                        },
                        new
                        {
                            Id = 12,
                            IsCorrect = false,
                            Name = "Answer 3",
                            QuestionId = 4
                        });
                });

            modelBuilder.Entity("LoQ.DAL.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Question 1",
                            QuestionnaireId = 1,
                            Text = "Question 1?"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Question 2",
                            QuestionnaireId = 1,
                            Text = "Question 2?"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Question 3",
                            QuestionnaireId = 1,
                            Text = "Question 3?"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Question 4",
                            QuestionnaireId = 1,
                            Text = "Question 4?"
                        });
                });

            modelBuilder.Entity("LoQ.DAL.Entities.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questionnaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is questionnaire 1",
                            Title = "Questionnaire 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "This is questionnaire 2",
                            Title = "Questionnaire 2"
                        });
                });

            modelBuilder.Entity("LoQ.DAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Email1",
                            Password = "Password1",
                            Role = "Administrator",
                            Username = "Username1"
                        });
                });

            modelBuilder.Entity("LoQ.DAL.Entities.Answer", b =>
                {
                    b.HasOne("LoQ.DAL.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("LoQ.DAL.Entities.Question", b =>
                {
                    b.HasOne("LoQ.DAL.Entities.Questionnaire", "Questionnaire")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("LoQ.DAL.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("LoQ.DAL.Entities.Questionnaire", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
